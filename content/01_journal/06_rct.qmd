---
title: "Chap6: RCT"
author: "Anthony El Khoueiry"
format: 
    html:
      code-line-numbers: true
      df-print: paged

---
----


```{r}
# Load the ggplot2 library
library(ggplot2)

# Read the customer data from the specified file path
customer_data <- readRDS("C:/Users/user/OneDrive/Desktop/UNI/TUHH/SEM 3/CAUSAL DATA SC/RDS/abtest_online.rds")
customer_data

# Create ggplot objects to compare various metrics between chatbot conditions
compare_purchase_amount <- 
  ggplot(customer_data, 
         aes(x = chatbot, 
             y = purchase_amount, 
             color = as.factor(chatbot))) +
  stat_summary(geom = "errorbar", 
               width = .5,
               fun.data = "mean_se", 
               fun.args = list(mult=1.96),
               show.legend = F) +
  labs(x = NULL, y = "purchase_amount", title = "Difference in purchase amount") +
  scale_x_discrete(labels = c("Not Treated","Treated"))

compare_previous_visit <- 
  ggplot(customer_data, 
         aes(x = chatbot, 
             y = previous_visit, 
             color = as.factor(chatbot))) +
  stat_summary(geom = "errorbar", 
               width = .5,
               fun.data = "mean_se", 
               fun.args = list(mult=1.96),
               show.legend = F) +
  labs(x = NULL, y = "previous_visit", title = "Difference in previous visit") +
  scale_x_discrete(labels = c("Not Treated","Treated"))

compare_mobile_device <- 
  ggplot(customer_data, 
         aes(x = chatbot, 
             y = mobile_device, 
             color = as.factor(chatbot))) +
  stat_summary(geom = "errorbar", 
               width = .5,
               fun.data = "mean_se", 
               fun.args = list(mult=1.96),
               show.legend = F) +
  labs(x = NULL, y = "mobile_device", title = "Difference in mobile device") +
  scale_x_discrete(labels = c("Not Treated","Treated"))

compare_purchase <- 
  ggplot(customer_data, 
         aes(x = chatbot,
             y = purchase, 
             color = as.factor(chatbot))) +
  stat_summary(geom = "errorbar", 
               width = .5,
               fun.data = "mean_se", 
               fun.args = list(mult=1.96),
               show.legend = F) +
  labs(x = NULL, y = "purchase", title = "Difference in purchase") +
  scale_x_discrete(labels = c("Not Treated","Treated"))

# Plot the comparisons
compare_purchase_amount
compare_previous_visit
compare_mobile_device
compare_purchase

#############################################################################

# Fit linear models to assess the impact of chatbot on purchase and purchase_amount
lm1 <- lm(purchase ~ chatbot, data = customer_data)
summary(lm1)

lm2 <- lm(purchase_amount ~ chatbot, data = customer_data)
summary(lm2)

#############################################################################

# Fit interaction models to evaluate the joint effect of chatbot and mobile_device
lm_mod1 <- lm(purchase ~ chatbot * mobile_device, data = customer_data)
summary(lm_mod1)

lm_mod2 <- lm(purchase_amount ~ chatbot * mobile_device, data = customer_data)
summary(lm_mod2)

#############################################################################

# Fit logistic regression model to assess the impact of chatbot on purchase likelihood
logistic_model <- glm(purchase ~ chatbot, family = binomial(link = 'logit'), data = customer_data)

# Display summary of the logistic regression model
summary(logistic_model)

cat("The chatbotTRUE coefficient is of particular interest. Since it has a negative estimate, it suggests that, compared to when the chatbot is not present, the presence of the chatbot is associated with a decrease in the log-odds of making a purchase. The p-value being less than 0.001 indicates that this effect is statistically significant.s